/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cn.xxxxxx.iser.jmtrace.examples.app1;

import java.util.concurrent.CountDownLatch;
import java.util.concurrent.Executors;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) throws Exception {
        int nThreads = 3;
        var executor = Executors.newFixedThreadPool(nThreads);
        var latch = new CountDownLatch(nThreads);

        for (var i = 0; i < nThreads; i++) {
            executor.execute(() -> {
                try {
                    Compose.run();
                } finally {
                    latch.countDown();
                }
            });
        }
        executor.shutdown();
        latch.await();
        System.out.println(new App().getGreeting());
    }

    public static class Compose {
        public Inner1 inner1 = new Inner1();

        public static void run() {
            var compose = new Compose();
            var a1 = compose.inner1.inner2Field;
            var a2 = a1.intField;
            var a3 = Inner1.Inner2.doubleField;

            a1.objectsField[0] = new Inner1();
            a1.objectsField[0].inner2Field.intField = 2;
        }

        public static class Inner1 {
            public Inner2 inner2Field = new Inner2();

            public static class Inner2 {
                public int intField = 0;
                public static double doubleField = 1.0;
                public Inner1[] objectsField = new Inner1[4];
            }
        }
    }
}
